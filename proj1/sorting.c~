#include "sorting.h"

long *Load_File (char *Filename, int *Size)
{
	FILE *fil;
	fil = fopen(Filename, "r");
	int size_check;
	int i = 0;
	long c;
	fscanf(fil, "%d", &size_check);
	*Size = size_check;
	long * arr = malloc(sizeof(*Size));
	rewind(fil);
	while(fscanf(fil, "%ld", &c) == 1)
	{
		if(i == 0)
		{
			size_check = c;
			if (size_check != *Size)
			{
				printf("Problem");
				printf("Size = %d", *Size);
				printf("size_check = %d", size_check);
			}
			i++;
		}
		else
		{
			arr[i] = c;
			i++;
		}
	}
	fclose(fil);
	return arr;
}
int Save_File (char *Filename, long *Array, int Size) 
{
	FILE *fp = fopen(Filename, "w");
	int n;
	for( n = 0; n< Size; n++)
	{
		if(n==0)
		{
			fprintf(fp,"%d\n", Size);
		}
		else
		{
			fprintf(fp,"%ld\n", Array[n]);
		}
	}
	fclose(fp);
	return Size;
}
void Shell_Insertion_Sort (long *Array, int Size, double *NComp, double *NMove)
{

}
void Improved_Bubble_Sort (long *Array, int Size, double *NComp, double *NMove)
{

}
void Save_Seq1 (char *Filename, int N)
{

}
void Save_Seq2 (char *Filename, int N)
{

}
